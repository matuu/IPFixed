/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Main.java
 *
 * Created on 17/06/2011, 14:48:27
 */
package ipfixed;

import Engine.CrearXML;
import Engine.LeerXML;
import Excepcion.ExceptionIPFixed;
import Modelo.Host;
import Modelo.HostModel;
import Modelo.Ip;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author matuuar
 */
public class Main extends javax.swing.JFrame {

    /** Creates new form Main */
    public Main() {
        initComponents();
        setLocationRelativeTo(null);
        splash();

    }

    /** Splash inicial
     * 
     */
    private void splash() {
        splash = new Inicio(this, true);
        splash.setLocationRelativeTo(null);
        splash.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        splash.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        conceptualMenu = new javax.swing.JPopupMenu();
        editarHost = new javax.swing.JMenuItem();
        eliminarHost = new javax.swing.JMenuItem();
        editarConfig = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        nombreTextEditar = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        macTextEditar = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        ipTextEditar = new javax.swing.JTextField();
        cerrarEditar = new javax.swing.JButton();
        guardarDatos1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nombreText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        macText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ipText = new javax.swing.JTextField();
        limpiarCampos = new javax.swing.JButton();
        guardarDatos = new javax.swing.JButton();
        logOut = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        nombreEstatico = new javax.swing.JTextField();
        nombreIncremental = new javax.swing.JTextField();
        usarBoolean = new javax.swing.JToggleButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaHosts = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        abrirMenu = new javax.swing.JMenuItem();
        guardarMenu = new javax.swing.JMenuItem();
        importarMenu = new javax.swing.JMenu();
        archivoCSVMenu = new javax.swing.JMenuItem();
        salirMenu = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        limpiarMenu = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        exportarItalc = new javax.swing.JMenuItem();
        toDHCPfile = new javax.swing.JMenuItem();
        ayudaMenu = new javax.swing.JMenu();
        acercaDeMenu = new javax.swing.JMenuItem();

        editarHost.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ipfixed/resources/2.png"))); // NOI18N
        editarHost.setText("Editar");
        editarHost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarHostActionPerformed(evt);
            }
        });
        conceptualMenu.add(editarHost);

        eliminarHost.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ipfixed/resources/116.png"))); // NOI18N
        eliminarHost.setText("Eliminar");
        conceptualMenu.add(eliminarHost);

        editarConfig.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        editarConfig.setTitle("Editar Configuración");
        editarConfig.setMinimumSize(new java.awt.Dimension(357, 200));
        editarConfig.setModal(true);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Editar Configuración"));
        jPanel4.setLayout(new java.awt.GridLayout(4, 2));

        jLabel5.setText("Nombre:");
        jPanel4.add(jLabel5);
        jPanel4.add(nombreTextEditar);

        jLabel6.setText("MAC Adress:");
        jPanel4.add(jLabel6);
        jPanel4.add(macTextEditar);

        jLabel7.setText("Dirección IP:");
        jPanel4.add(jLabel7);
        jPanel4.add(ipTextEditar);

        cerrarEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ipfixed/resources/116.png"))); // NOI18N
        cerrarEditar.setText("Cerrar");
        cerrarEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarEditarActionPerformed(evt);
            }
        });
        jPanel4.add(cerrarEditar);

        guardarDatos1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ipfixed/resources/112.png"))); // NOI18N
        guardarDatos1.setText("Aceptar");
        guardarDatos1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarDatos1ActionPerformed(evt);
            }
        });
        jPanel4.add(guardarDatos1);

        javax.swing.GroupLayout editarConfigLayout = new javax.swing.GroupLayout(editarConfig.getContentPane());
        editarConfig.getContentPane().setLayout(editarConfigLayout);
        editarConfigLayout.setHorizontalGroup(
            editarConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
        );
        editarConfigLayout.setVerticalGroup(
            editarConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IPFixed");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Configurar Maquina"));
        jPanel1.setLayout(new java.awt.GridLayout(4, 2));

        jLabel1.setText("Nombre:");
        jPanel1.add(jLabel1);
        jPanel1.add(nombreText);

        jLabel2.setText("MAC Adress:");
        jPanel1.add(jLabel2);
        jPanel1.add(macText);

        jLabel3.setText("Dirección IP:");
        jPanel1.add(jLabel3);
        jPanel1.add(ipText);

        limpiarCampos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ipfixed/resources/38.png"))); // NOI18N
        limpiarCampos.setText("Limpiar");
        limpiarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarCamposActionPerformed(evt);
            }
        });
        jPanel1.add(limpiarCampos);

        guardarDatos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ipfixed/resources/112.png"))); // NOI18N
        guardarDatos.setText("Aceptar");
        guardarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarDatosActionPerformed(evt);
            }
        });
        jPanel1.add(guardarDatos);

        logOut.setForeground(new java.awt.Color(255, 0, 0));
        logOut.setToolTipText("Bitácora del sistema");

        jLabel4.setText("Nombre compuesto:");

        nombreEstatico.setText("PC");
        nombreEstatico.setToolTipText("Parte del nombre estática");
        nombreEstatico.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nombreEstaticoFocusLost(evt);
            }
        });

        nombreIncremental.setText("1");
        nombreIncremental.setToolTipText("Parte numérica que se incrementará.");
        nombreIncremental.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nombreIncrementalFocusLost(evt);
            }
        });

        usarBoolean.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ipfixed/resources/no.png"))); // NOI18N
        usarBoolean.setText("Usar");
        usarBoolean.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                usarBooleanStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(6, 6, 6)
                .addComponent(nombreEstatico, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nombreIncremental, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usarBoolean, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nombreEstatico, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usarBoolean)
                    .addComponent(nombreIncremental, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.LINE_AXIS));

        tablaHosts.setModel(hm);
        tablaHosts.setComponentPopupMenu(conceptualMenu);
        jScrollPane1.setViewportView(tablaHosts);
        tablaHosts.setComponentPopupMenu(conceptualMenu);

        jPanel3.add(jScrollPane1);

        jMenu1.setText("Archivos");

        abrirMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ipfixed/resources/105.png"))); // NOI18N
        abrirMenu.setText("Abrir");
        abrirMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirMenuActionPerformed(evt);
            }
        });
        jMenu1.add(abrirMenu);

        guardarMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ipfixed/resources/7.png"))); // NOI18N
        guardarMenu.setText("Guardar");
        guardarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarMenuActionPerformed(evt);
            }
        });
        jMenu1.add(guardarMenu);

        importarMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ipfixed/resources/112.png"))); // NOI18N
        importarMenu.setText("Importar");

        archivoCSVMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ipfixed/resources/8.png"))); // NOI18N
        archivoCSVMenu.setText("Archivo .csv");
        archivoCSVMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                archivoCSVMenuActionPerformed(evt);
            }
        });
        importarMenu.add(archivoCSVMenu);

        jMenu1.add(importarMenu);

        salirMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ipfixed/resources/Exit.png"))); // NOI18N
        salirMenu.setText("Salir");
        salirMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirMenuActionPerformed(evt);
            }
        });
        jMenu1.add(salirMenu);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Editar");

        limpiarMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ipfixed/resources/38.png"))); // NOI18N
        limpiarMenu.setText("Limpiar Hosts");
        limpiarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarMenuActionPerformed(evt);
            }
        });
        jMenu3.add(limpiarMenu);

        jMenuBar1.add(jMenu3);

        jMenu2.setText("Herramientas");

        exportarItalc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ipfixed/resources/54.png"))); // NOI18N
        exportarItalc.setText("Exportar configuración a iTalc");
        exportarItalc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportarItalcActionPerformed(evt);
            }
        });
        jMenu2.add(exportarItalc);

        toDHCPfile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ipfixed/resources/31.png"))); // NOI18N
        toDHCPfile.setText("Exportar a formato DHCP");
        toDHCPfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toDHCPfileActionPerformed(evt);
            }
        });
        jMenu2.add(toDHCPfile);

        jMenuBar1.add(jMenu2);

        ayudaMenu.setText("Ayuda");

        acercaDeMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ipfixed/resources/65.png"))); // NOI18N
        acercaDeMenu.setText("Acerca de");
        acercaDeMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acercaDeMenuActionPerformed(evt);
            }
        });
        ayudaMenu.add(acercaDeMenu);

        jMenuBar1.add(ayudaMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE)
            .addComponent(logOut, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logOut, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void limpiarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarCamposActionPerformed
        limpiar();
    }//GEN-LAST:event_limpiarCamposActionPerformed

    private void guardarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarDatosActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                try {
                    insertarHost();
                } catch (ExceptionIPFixed ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }//GEN-LAST:event_guardarDatosActionPerformed

    private void toDHCPfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toDHCPfileActionPerformed

        JDialog exportDHCP = new exportDHCP(this, true);
        exportDHCP.setLocationRelativeTo(this);
        exportDHCP.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        exportDHCP.setVisible(true);
        tmp = toDHCPfileText();

    }//GEN-LAST:event_toDHCPfileActionPerformed

    private void nombreEstaticoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nombreEstaticoFocusLost
        if (nombreEstatico.getText().equals("")) {
            nombreEstatico.setText("PC");
        }
    }//GEN-LAST:event_nombreEstaticoFocusLost

    private void nombreIncrementalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nombreIncrementalFocusLost
        if (nombreIncremental.getText().equals("")) {
            nombreIncremental.setText("1");
        }
    }//GEN-LAST:event_nombreIncrementalFocusLost

    private void usarBooleanStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_usarBooleanStateChanged
        if (usarBoolean.isSelected()) {
            usarBoolean.setText("No usar");
            usarBoolean.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ipfixed/resources/101.png")));
            nombreText.setText(nombreEstatico.getText() + nombreIncremental.getText());
        } else {
            usarBoolean.setText("Usar");
            usarBoolean.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ipfixed/resources/no.png")));

        }
    }//GEN-LAST:event_usarBooleanStateChanged

    private void guardarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarMenuActionPerformed
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos XML", "xml");
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(filter);
        int seleccion = fileChooser.showSaveDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            if (fileChooser.getSelectedFile() != null) {
                CrearXML a = new CrearXML();
                a.guardar(fileChooser.getSelectedFile().getAbsolutePath(), hosts);
                JOptionPane.showMessageDialog(rootPane, "Archivo guardado.", "Guardado", JOptionPane.INFORMATION_MESSAGE);

            } else {
                JOptionPane.showMessageDialog(rootPane, "Seleccione un donde guardar primero.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }


    }//GEN-LAST:event_guardarMenuActionPerformed

    private void archivoCSVMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_archivoCSVMenuActionPerformed
        JDialog importar = new Importar(this, true);
        importar.setLocationRelativeTo(this);
        importar.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        importar.setVisible(true);
    }//GEN-LAST:event_archivoCSVMenuActionPerformed

    private void limpiarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarMenuActionPerformed
        limpiar();
        hosts = new ArrayList<Host>();
        logOut.setText("");
        hm.vaciar();
        temp = new Host();
    }//GEN-LAST:event_limpiarMenuActionPerformed

    private void exportarItalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportarItalcActionPerformed
        JDialog exportar2Italc = new exportarItalc(this, true);
        exportar2Italc.setLocationRelativeTo(this);
        exportar2Italc.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        exportar2Italc.setVisible(true);
    }//GEN-LAST:event_exportarItalcActionPerformed

    private void salirMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirMenuActionPerformed
        dispose();
        System.exit(1);
    }//GEN-LAST:event_salirMenuActionPerformed

    private void abrirMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirMenuActionPerformed
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos XML", "xml");
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(filter);
        int seleccion = fileChooser.showOpenDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            if (fileChooser.getSelectedFile() != null) {
                LeerXML a = new LeerXML();
                if (a.open(fileChooser.getSelectedFile())) {
                } else {
                    JOptionPane.showMessageDialog(this, "Error al abrir el archivo. Intente nuevamente", "Oups", JOptionPane.ERROR_MESSAGE);
                }


            } else {
                JOptionPane.showMessageDialog(rootPane, "Seleccione un donde guardar primero.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_abrirMenuActionPerformed

    private void acercaDeMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acercaDeMenuActionPerformed
        JDialog ayudaDialog = new Ayuda(this, true);
        ayudaDialog.setLocationRelativeTo(null);
        ayudaDialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        ayudaDialog.setVisible(true);
    }//GEN-LAST:event_acercaDeMenuActionPerformed

    private void editarHostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarHostActionPerformed

        try {
            temp = hm.getFila(tablaHosts.getSelectedRow());
            nombreTextEditar.setText(temp.getNombre());
            macTextEditar.setText(temp.getMac());
            ipTextEditar.setText(temp.getIp());
            editarConfig.setLocationRelativeTo(null);
            editarConfig.setVisible(true);




        } catch (IndexOutOfBoundsException ex) {
            logOut.setText("Debe seleccionar una fila primero.");
        } catch (NullPointerException ex) {
            logOut.setText("Debe seleccionar una fila primero.");
        }

    }//GEN-LAST:event_editarHostActionPerformed

    private void cerrarEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarEditarActionPerformed
        editarConfig.dispose();
        temp = new Host();
    }//GEN-LAST:event_cerrarEditarActionPerformed

    private void guardarDatos1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarDatos1ActionPerformed
        if (nombreTextEditar.getText().isEmpty() || macTextEditar.getText().isEmpty() || ipTextEditar.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Todos los campos deben contener datos.");
        } else if (macTextEditar.getText().length() != 12) {
            JOptionPane.showMessageDialog(rootPane, "Formato incorrecto de la MAC.\n"
                    + "Debe ingresar solo números y letras, sin : ni -.\n"
                    + "Son 12 caracteres alfanuméricos.");
        } else {
            try {
                Host aux = hm.getFila(tablaHosts.getSelectedRow());

                Ip ip = new Ip(ipTextEditar.getText());
                Host h = new Host(nombreTextEditar.getText(), macTextEditar.getText(), ip.toString());
                h.setId(aux.getId());

                hm.insertarFila(h, tablaHosts.getSelectedRow());
                int i = hosts.indexOf(aux);
                hosts.remove(aux);
                hosts.add(i, h);
                editarConfig.dispose();
                temp = new Host();
            } catch (ExceptionIPFixed ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_guardarDatos1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {

            UIManager.setLookAndFeel(new com.nilo.plaf.nimrod.NimRODLookAndFeel());
            java.awt.EventQueue.invokeLater(new Runnable() {

                @Override
                public void run() {
                    new Main().setVisible(true);

                }
            });
        } catch (Exception e) {
        }


    }

    public void limpiar() {
        nombreText.setText(null);
        macText.setText(null);
        ipText.setText(null);
        logOut.setText("");
        temp = new Host();

    }

    public void insertarHost() throws ExceptionIPFixed {
        if (nombreText.getText().isEmpty() || macText.getText().isEmpty() || ipText.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Todos los campos deben contener datos.");
        } else if (macText.getText().length() != 12) {
            JOptionPane.showMessageDialog(rootPane, "Formato incorrecto de la MAC.\n"
                    + "Debe ingresar solo números y letras, sin : ni -.\n"
                    + "Son 12 caracteres alfanuméricos.");

        } else {
            Ip ip = new Ip(ipText.getText());
            Host h = new Host(nombreText.getText(), macText.getText(), ip.toString());
            h.setId(id);
            if (hosts.contains(h)) {
                String nombre=hosts.get(hosts.indexOf(h)).getNombre();
                JOptionPane.showMessageDialog(null, "La MAC "+h.getMacCon2Puntos()+ 
                        " se encuentra configurada en el host "+nombre);
            } else {


                id++;
                hosts.add(h);
                macText.setText("");
                ipText.setText(ip.nextIP());
                if (usarBoolean.isSelected()) {
                    try {
                        int num = Integer.valueOf(nombreIncremental.getText());
                        num++;
                        nombreText.setText(nombreEstatico.getText() + num);
                        nombreIncremental.setText(String.valueOf(num));
                    } catch (NumberFormatException ex) {
                        JOptionPane.showMessageDialog(rootPane, "La parte incremental debe ser numérica");
                        logOut.setText("La parte incremental debe ser numérica");
                    }
                }
                hm.addHost(h);
                logOut.setText("Host " + h.getNombre() + " ingresado correctamente.");
            }
        }
    }

    public String toDHCPfileText() {
        String temp1 = "";
        for (int i = 0; i < hosts.size(); i++) {
            temp1 += hosts.get(i).toString();
            temp1 += "\n";
        }
        return temp1;
    }

    public static ArrayList<Host> getHost() {
        return hosts;
    }

    public static void setHost(ArrayList<Host> m) {
        hosts = m;
        hm.cargarHosts(hosts);
    }

    public static int getId() {
        return id;
    }

    public static void setId(int id) {
        Main.id = id;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem abrirMenu;
    private javax.swing.JMenuItem acercaDeMenu;
    private javax.swing.JMenuItem archivoCSVMenu;
    private javax.swing.JMenu ayudaMenu;
    private javax.swing.JButton cerrarEditar;
    private javax.swing.JPopupMenu conceptualMenu;
    private javax.swing.JDialog editarConfig;
    private javax.swing.JMenuItem editarHost;
    private javax.swing.JMenuItem eliminarHost;
    private javax.swing.JMenuItem exportarItalc;
    private javax.swing.JButton guardarDatos;
    private javax.swing.JButton guardarDatos1;
    private javax.swing.JMenuItem guardarMenu;
    private javax.swing.JMenu importarMenu;
    private javax.swing.JTextField ipText;
    private javax.swing.JTextField ipTextEditar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton limpiarCampos;
    private javax.swing.JMenuItem limpiarMenu;
    private javax.swing.JLabel logOut;
    private javax.swing.JTextField macText;
    private javax.swing.JTextField macTextEditar;
    private javax.swing.JTextField nombreEstatico;
    private javax.swing.JTextField nombreIncremental;
    private javax.swing.JTextField nombreText;
    private javax.swing.JTextField nombreTextEditar;
    private javax.swing.JMenuItem salirMenu;
    private javax.swing.JTable tablaHosts;
    private javax.swing.JMenuItem toDHCPfile;
    private javax.swing.JToggleButton usarBoolean;
    // End of variables declaration//GEN-END:variables
    static ArrayList<Host> hosts = new ArrayList<Host>();
    String tmp = "";
    private static int id = 1000;
    private static HostModel hm = new HostModel();
    private JDialog splash;
    private Host temp = new Host();
}
